You are given the heads of two sorted linked lists list1 and list2.

Merge the two lists into one sorted list. The list should be made by splicing together the nodes of the first two lists.

Return the head of the merged linked list.

 

Example 1:


Input: list1 = [1,2,4], list2 = [1,3,4]
Output: [1,1,2,3,4,4]
Example 2:

Input: list1 = [], list2 = []
Output: []
Example 3:

Input: list1 = [], list2 = [0]
Output: [0]
 

Constraints:

The number of nodes in both lists is in the range [0, 50].
-100 <= Node.val <= 100
Both list1 and list2 are sorted in non-decreasing order.




#include <iostream>
using namespace std;

// Definition for a singly linked list node
struct ListNode {
    int val;
    ListNode* next;
    ListNode(int x) : val(x), next(NULL) {}
};

// Function to merge two sorted linked lists
ListNode* mergeTwoLists(ListNode* l1, ListNode* l2) {
    // Create a dummy node to help with the process
    ListNode* dummy = new ListNode(0);
    ListNode* current = dummy;

    // Traverse both lists and merge them
    while (l1 != NULL && l2 != NULL) {
        if (l1->val < l2->val) {
            current->next = l1;
            l1 = l1->next;
        } else {
            current->next = l2;
            l2 = l2->next;
        }
        current = current->next;
    }

    // Append the remaining nodes (if any) from either list
    if (l1 != NULL) {
        current->next = l1;
    } else if (l2 != NULL) {
        current->next = l2;
    }

    // Return the merged list, skipping the dummy node
    return dummy->next;
}

// Function to print a linked list
void printList(ListNode* head) {
    while (head != NULL) {
        cout << head->val << " ";
        head = head->next;
    }
    cout << endl;
}

// Function to create a linked list from an array
ListNode* createList(int arr[], int n) {
    ListNode* head = new ListNode(arr[0]);
    ListNode* current = head;
    for (int i = 1; i < n; i++) {
        current->next = new ListNode(arr[i]);
        current = current->next;
    }
    return head;
}

int main() {
    // Example input
    int arr1[] = {1, 3, 5};
    int arr2[] = {2, 4, 6};
    
    // Create two sorted linked lists from the arrays
    ListNode* l1 = createList(arr1, 3);
    ListNode* l2 = createList(arr2, 3);
    
    // Merge the two sorted linked lists
    ListNode* mergedList = mergeTwoLists(l1, l2);
    
    // Print the merged linked list
    cout << "Merged Linked List: ";
    printList(mergedList);
    
    return 0;
}

Time complexity: O(N+M)
Space Complexity: O(1)
