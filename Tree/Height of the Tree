#include <iostream>
#include <algorithm> // for std::max

struct TreeNode {
    int val;
    TreeNode* left;
    TreeNode* right;
    
    TreeNode(int v) : val(v), left(nullptr), right(nullptr) {}
};

int getHeight(TreeNode* root) {
    if (root == nullptr) return 0; // base case: empty tree has height 0

    int leftHeight = getHeight(root->left);
    int rightHeight = getHeight(root->right);

    return std::max(leftHeight, rightHeight) + 1;
}

int main() {
    /*
        Example Tree:
              1
             / \
            2   3
           /
          4
    */
    TreeNode* root = new TreeNode(1);
    root->left = new TreeNode(2);
    root->right = new TreeNode(3);
    root->left->left = new TreeNode(4);

    std::cout << "Maximum height: " << getHeight(root) << std::endl;
    return 0;
}
